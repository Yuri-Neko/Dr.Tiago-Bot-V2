import { Logger } from 'pino';
import { BaileysEventEmitter } from '../Types';
declare type BaileysBufferableEventEmitter = BaileysEventEmitter & {
    /**
     * starts buffering events, call flush() to release them
     * @returns true if buffering just started, false if it was already buffering
     * */
    buffer(): boolean;
    /** flushes all buffered events */
    flush(): Promise<void>;
    /** waits for the task to complete, before releasing the buffer */
    processInBuffer(task: Promise<any>): any;
};
/**
 * The event buffer logically consolidates different events into a single event
 * making the data processing more efficient.
 * @param ev the baileys event emitter
 */
export declare const makeEventBuffer: (ev: BaileysEventEmitter, logger: Logger) => BaileysBufferableEventEmitter;
export {};
